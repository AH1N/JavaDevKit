 public String buildDeleteQuery(Class<?> clazz, UUID primaryKey){
//        query.append("DELETE FROM ");
//        appendQueryElement(clazz ," WHERE ");
//        appendPrimaryKeyInFields(clazz,primaryKey);
//        queryTostring();
//
//        return queryTostring();

        StringBuilder query = new StringBuilder("DELETE FROM ");

        if (clazz.isAnnotationPresent(Table.class)) {
            Table tableAnnotation = clazz.getAnnotation(Table.class);
            query.append(tableAnnotation.name()).append(" WHERE ");
        }

        Field[] fields = clazz.getDeclaredFields();
        for (Field field : fields) {
            if (field.isAnnotationPresent(Column.class)) {
                Column columnAnnotation = field.getAnnotation(Column.class);
                if (columnAnnotation.primaryKey()) {
                    query.append(columnAnnotation.name()).append(" = ").append(primaryKey);
                    break;
                }
            }
        }
        return query.toString();
    }

    private void appendQueryElement(Class<?> clazz ,String queryElement){

        if (clazz.isAnnotationPresent(Table.class)) {
            Table tableAnnotation = clazz.getAnnotation(Table.class);
            this.query.append(tableAnnotation.name()).append(queryElement);
        }
    }

    private void appendPrimaryKeyInFields(Class<?> clazz, UUID primaryKey){
        Field[] fields = clazz.getDeclaredFields();
        for (Field field : fields) {
            if (field.isAnnotationPresent(Column.class)) {
                Column columnAnnotation = field.getAnnotation(Column.class);
                if (columnAnnotation.primaryKey()) {
                    this.query.append(columnAnnotation.name()).append(" = ").append(primaryKey);
                    break;
                }
            }
        }
    }
    private String queryTostring(){
        return this.query.toString();
    };
